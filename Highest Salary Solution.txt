Problem statement :-
The Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.

 +----+-------+--------+--------------+
 | Id | Name  | Salary | DepartmentId |
 +----+-------+--------+--------------+
 | 1  | Joe   | 70000  | 1            |
 | 2  | Jim   | 90000  | 1            |
 | 3  | Henry | 80000  | 2            |
 | 4  | Sam   | 60000  | 2            |
 | 5  | Max   | 90000  | 1            |
 +----+-------+--------+--------------+
The Department table holds all departments of the company.

 +----+----------+
 | Id | Name     |
 +----+----------+
 | 1  | IT       |
 | 2  | Sales    |
 +----+----------+
Write a SQL query to find employees who have the highest salary in each of the departments. For the above tables, your SQL query should return the following rows (order of rows does not matter).

 +------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Jim      | 90000  |
| Sales      | Henry    | 80000  |
+------------+----------+--------+


Solution :-
with cte1 as(
    select e.*,d.id as d_id,d.name as department 
    from employee e join  department d on e.departmentid=d.id
),
cte2 as(
   select c.*,dense_rank() over(partition by departmentid order by salary desc) as rk 
   from cte1 c
)
select department as "Department",name as "Employee",salary as "salary" 
from cte2 where rk=1 order by name desc;