Problem statement :-
Table Person:

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| id             | int     |
| name           | varchar |
| phone_number   | varchar |
+----------------+---------+
id is the primary key for this table.
Each row of this table contains the name of a person and their phone number.
Phone number will be in the form 'xxx-yyyyyyy' where xxx is the country code (3 characters) and yyyyyyy is the phone number (7 characters) where x and y are digits. Both can contain leading zeros.

Table Country:
+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| name           | varchar |
| country_code   | varchar |
+----------------+---------+
country_code is the primary key for this table.
Each row of this table contains the country name and its code. country_code will be in the form 'xxx' where x is digits.

Table Calls:
+-------------+------+
| Column Name | Type |
+-------------+------+
| caller_id   | int  |
| callee_id   | int  |
| duration    | int  |
+-------------+------+
There is no primary key for this table, it may contain duplicates.
Each row of this table contains the caller id, callee id and the duration of the call in minutes. caller_id != callee_id

A telecommunications company wants to invest in new countries. The company intends to invest in the countries where the average call duration of the calls in this country is strictly greater than the global average call duration.

Write an SQL query to find the countries where this company can invest.
Return the result table in any order.

Solution :-
with cte as (
    select
        id,
        left(phone_number,3) as code
    from person
),cte2 as (
    select      
        caller_id as id,
        code,
        duration
    from calls c 
    left join cte on c.caller_id=cte.id

    union all

    select  
        callee_id as id,
        code,
        duration
    from calls c 
    left join cte on c.callee_id=cte.id 
),cte3 as (
    select
        code,
        avg(duration) as average_duration
    from cte2 
    group by 1
)

select
    c.name as country 
from cte3
join country c on cte3.code=c.country_code
where average_duration > (
    select avg(duration) from cte2 
)