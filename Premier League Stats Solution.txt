Problem statement
Table: Teams

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| team_id        | int     |
| team_name      | varchar |
+----------------+---------+
team_id is the primary key for this table.
Each row contains information about one team in the league.


Table: Matches

+-----------------+---------+
| Column Name     | Type    |
+-----------------+---------+
| home_team_id    | int     |
| away_team_id    | int     |
| home_team_goals | int     |
| away_team_goals | int     |
+-----------------+---------+
(home_team_id, away_team_id) is the primary key for this table.
Each row contains information about one match.
home_team_goals is the number of goals scored by the home team.
away_team_goals is the number of goals scored by the away team.
The winner of the match is the team with the higher number of goals.


Write an SQL query to report the statistics of the league. The statistics should be built using the played matches where the winning team gets three points and the losing team gets no points. If a match ends with a draw, both teams get one point.

Each row of the result table should contain:

team_name - The name of the team in the Teams table.
matches_played - The number of matches played as either a home or away team.
points - The total points the team has so far.
goal_for - The total number of goals scored by the team across all matches.
goal_against - The total number of goals scored by opponent teams against this team across all matches.
goal_diff - The result of goal_for - goal_against.
Return the result table in descending order by points. If two or more teams have the same points, order them in descending order by goal_diff. If there is still a tie, order them by team_name in lexicographical order.

Solution :-
SELECT 
    b.team_name, 
    COUNT(*) AS matches_played,
    SUM(a.points) AS points,
    SUM(a.goals_scored) AS goal_for,
    SUM(a.goals_against) AS goal_against,
    (SUM(a.goals_scored) - SUM(a.goals_against)) AS goal_diff  
FROM (
    SELECT 
        home_team_id AS team_id, 
        home_team_goals AS goals_scored, 
        away_team_goals AS goals_against,
        CASE 
            WHEN home_team_goals > away_team_goals THEN 3
            WHEN home_team_goals < away_team_goals THEN 0
            ELSE 1
        END AS points
    FROM matches
    UNION ALL
    SELECT 
        away_team_id AS team_id, 
        away_team_goals AS goals_scored, 
        home_team_goals AS goals_against,
        CASE 
            WHEN home_team_goals < away_team_goals THEN 3
            WHEN home_team_goals > away_team_goals THEN 0
            ELSE 1
        END AS points
    FROM matches
) AS a 
LEFT JOIN teams AS b ON a.team_id = b.team_id
GROUP BY b.team_name 
ORDER BY points DESC, goal_diff DESC, b.team_name;