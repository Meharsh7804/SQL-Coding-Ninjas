Problem statement :-
Table: Failed

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| fail_date    | date    |
+--------------+---------+

Primary key for this table is fail_date.
Failed table contains the days of failed tasks.

Table: Succeeded
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| success_date | date    |
+--------------+---------+

Primary key for this table is success_date.
Succeeded table contains the days of succeeded tasks.
A system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.
Write an SQL query to generate a report of period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.
period_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.
Order result by start_date.

Solution :-
select distinct a.period_state, min(a.datee) over(partition by a.grp) as start_date, max(a.datee) over(partition by a.grp) as end_date FROM(
WITH cte AS (
    SELECT fail_date AS datee, 'failed' AS period_state
    FROM failed
    UNION
    SELECT success_date AS datee, 'succeeded' AS period_state
    FROM succeeded)
SELECT datee,period_state,
        ROW_NUMBER() OVER (ORDER BY datee) -
        ROW_NUMBER() OVER (PARTITION BY period_state ORDER BY datee) AS grp
FROM cte
WHERE EXTRACT(year FROM datee)=2019
ORDER BY datee)a
order by 2