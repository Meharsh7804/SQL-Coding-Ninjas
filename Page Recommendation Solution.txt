Problem statement :-
Table: Friendship

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| user1_id      | int     |
| user2_id      | int     |
+---------------+---------+
(user1_id, user2_id) is the primary key for this table.
Each row of this table indicates that there is a friendship relation between user1_id and user2_id.

Table: Likes
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| user_id     | int     |
| page_id     | int     |
+-------------+---------+
(user_id, page_id) is the primary key for this table.
Each row of this table indicates that user_id likes page_id.

Write an SQL query to recommend pages to the user with user_id = 1 using the pages that your friends liked. It should not recommend pages you already liked.

Return result table in any order without duplicates.

Solution :-
with cte1 as
(select user1_id,user2_id from friendship 
union all 
select user2_id,user1_id from friendship)
,cte2 as
(select user2_id from cte1 where user1_id=1)
select distinct page_id as recommended_page 
from likes where user_id in
(select user2_id from cte2)and page_id not in 
(select page_id from likes where user_id=1)  